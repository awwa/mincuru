openapi: 3.0.1
info:
  title: Mincuru Cars App
  version: 0.0.1
  contact:
    name: Wataru Sato
    url: 'https://awwa500.blogger.com'
    email: awwa500@gmail.com
  description: Mincuru Cars App API仕様
servers:
  - url: 'http://localhost/api/v1'
  - url: 'http://localhost:8080'
    description: Dev Server
  - url: 'http://localhost:3100'
    description: Stoplight Studio
  - url: 'http://localhost:4010'
    description: Stoplight Prism
  - url: /
    description: Unit test
paths:
  /users/login:
    post:
      description: ''
      operationId: post-users-login
      requestBody:
        description: 認証情報
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: ''
      security: []
    parameters: []
  /users/refresh_token:
    parameters: []
    get:
      summary: ''
      operationId: get-users-refresh_token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: ''
  '/users/{id}':
    get:
      description: ''
      operationId: get-user
      parameters:
        - name: id
          in: path
          description: 対象AdminのID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: ''
      operationId: delete-user
      parameters:
        - name: id
          in: path
          description: 対象AdminのID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples: {}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      description: ''
      operationId: patch-user
      parameters:
        - name: id
          in: path
          description: 対象AdminのID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: 更新するAdmin情報
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserRequest'
        required: false
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /users:
    get:
      summary: ''
      tags: []
      operationId: get-users
      parameters:
        - schema:
            type: string
            format: email
            example: hoge@example.com
          in: query
          name: email
          description: メールアドレス
          allowReserved: true
        - schema:
            type: string
            example: ほげ 太郎
          in: query
          name: name
          description: 名前
          allowReserved: true
        - schema:
            type: string
            enum:
              - user
              - admin
            example: user
          in: query
          name: role
          description: ロール
          allowReserved: true
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                x-examples:
                  example-1:
                    - id: 123
                      name: hoge fuga
                      email: hoge@example.com
                      role: user
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
    parameters: []
    post:
      summary: ''
      operationId: post-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id'
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: number
                required:
                  - id
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRequest'
            examples: {}
        description: ''
  /users/logout:
    post:
      summary: ''
      operationId: post-users-logout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: ''
      parameters: []
  /users/me:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-user-me
      description: ''
    patch:
      summary: ''
      operationId: patch-user-me
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserMeRequest'
            examples: {}
      description: ''
  /cars/search:
    parameters: []
    post:
      summary: ''
      operationId: post-cars-search
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    maker_name:
                      type: string
                    grade_name:
                      type: string
                    model_name:
                      type: string
                    model_code:
                      type: string
                    price:
                      type: integer
                      nullable: true
                    url:
                      type: string
                      nullable: true
                    image_url:
                      type: string
                      nullable: true
                    model_change_full:
                      type: string
                      format: date-time
                      nullable: true
                    model_change_last:
                      type: string
                      format: date-time
                      nullable: true
                  required:
                    - id
                    - maker_name
                    - grade_name
                    - model_name
                    - model_code
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maker_name:
                  type: string
                model_name:
                  type: string
                grade_name:
                  type: string
                model_code:
                  type: string
                price_lower:
                  type: number
                price_higher:
                  type: number
                model_change_from:
                  type: string
                  format: date
                model_change_to:
                  type: string
                  format: date
                power_train:
                  type: array
                  items:
                    type: string
                    enum:
                      - ICE
                      - StrHV
                      - MldHV
                      - SerHV
                      - PHEV
                      - BEV
                      - RexEV
                      - FCEV
  '/cars/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-cars-id
    patch:
      summary: ''
      operationId: patch-cars-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
    delete:
      summary: ''
      operationId: delete-cars-id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cars:
    post:
      summary: ''
      operationId: post-cars
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Id'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
components:
  schemas:
    Car:
      type: object
      title: Car
      additionalProperties: false
      properties:
        id:
          type: integer
        is_del:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        maker_name:
          type: string
        model_name:
          type: string
        grade_name:
          type: string
        model_code:
          type: string
        price:
          type: integer
          nullable: true
        url:
          type: string
          nullable: true
        image_url:
          type: string
          nullable: true
        model_change_full:
          type: string
          format: date-time
          nullable: true
        model_change_last:
          type: string
          format: date-time
          nullable: true
        body:
          $ref: '#/components/schemas/Body'
        interior:
          $ref: '#/components/schemas/Interior'
        performance:
          $ref: '#/components/schemas/Performance'
        power_train:
          type: string
          nullable: true
        drive_system:
          type: string
          nullable: true
        engine:
          $ref: '#/components/schemas/Engine'
        motor_x:
          $ref: '#/components/schemas/Motor'
        motor_y:
          $ref: '#/components/schemas/Motor'
        battery:
          $ref: '#/components/schemas/Battery'
        steering:
          type: string
          nullable: true
        suspension_front:
          type: string
          nullable: true
        suspension_rear:
          type: string
          nullable: true
        brake_front:
          type: string
          nullable: true
        brake_rear:
          type: string
          nullable: true
        tire_front:
          $ref: '#/components/schemas/Tire'
        tire_rear:
          $ref: '#/components/schemas/Tire'
        transmission:
          $ref: '#/components/schemas/Transmission'
        fuel_efficiency:
          type: string
          nullable: true
    Body:
      type: object
      title: Body
      additionalProperties: false
      properties:
        length:
          type: integer
          nullable: true
        width:
          type: integer
          nullable: true
        height:
          type: integer
          nullable: true
        wheel_base:
          type: integer
          nullable: true
        tread_front:
          type: integer
          nullable: true
        tread_rear:
          type: integer
          nullable: true
        min_road_clearance:
          type: integer
          nullable: true
        body_weight:
          type: integer
          nullable: true
    Interior:
      type: object
      title: Interior
      additionalProperties: false
      properties:
        length:
          type: integer
          nullable: true
        width:
          type: integer
          nullable: true
        height:
          type: integer
          nullable: true
        luggage_cap:
          type: integer
          nullable: true
        riding_cap:
          type: integer
          nullable: true
    Performance:
      type: object
      title: Performance
      additionalProperties: false
      properties:
        min_turning_radius:
          type: number
          nullable: true
        fcr_wltc:
          type: number
          nullable: true
        fcr_wltc_l:
          type: number
          nullable: true
        fcr_wltc_m:
          type: number
          nullable: true
        fcr_wltc_h:
          type: number
          nullable: true
        fcr_wltc_exh:
          type: number
          nullable: true
        fcr_jc08:
          type: number
          nullable: true
        mpc_wltc:
          type: number
          nullable: true
        ecr_wltc:
          type: number
          nullable: true
        ecr_wltc_l:
          type: number
          nullable: true
        ecr_wltc_m:
          type: number
          nullable: true
        ecr_wltc_h:
          type: number
          nullable: true
        ecr_wltc_exh:
          type: number
          nullable: true
        ecr_jc08:
          type: number
          nullable: true
        mpc_jc08:
          type: number
          nullable: true
    Engine:
      type: object
      title: Engine
      additionalProperties: false
      properties:
        code:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        cylinders:
          type: integer
          nullable: true
        cylinder_layout:
          type: string
          nullable: true
        valve_system:
          type: string
          nullable: true
        displacement:
          type: number
          nullable: true
        bore:
          type: number
          nullable: true
        stroke:
          type: number
          nullable: true
        comp_ratio:
          type: number
          nullable: true
        max_output:
          type: number
          nullable: true
        max_output_lower_rpm:
          type: number
          nullable: true
        max_output_higher_rpm:
          type: number
          nullable: true
        max_torque:
          type: number
          nullable: true
        max_torque_lower_rpm:
          type: number
          nullable: true
        max_torque_higher_rpm:
          type: number
          nullable: true
        fuel_system:
          type: string
          nullable: true
        fuel_type:
          type: string
          nullable: true
        fuel_tank_cap:
          type: integer
          nullable: true
    Motor:
      type: object
      title: Motor
      additionalProperties: false
      properties:
        code:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        purpose:
          type: string
          nullable: true
        rated_output:
          type: number
          nullable: true
        max_output:
          type: number
          nullable: true
        max_output_lower_rpm:
          type: number
          nullable: true
        max_output_higher_rpm:
          type: number
          nullable: true
        max_torque:
          type: number
          nullable: true
        max_torque_lower_rpm:
          type: number
          nullable: true
        max_torque_higher_rpm:
          type: number
          nullable: true
    Battery:
      type: object
      title: Battery
      additionalProperties: false
      properties:
        type:
          type: string
          nullable: true
        quantity:
          type: integer
          nullable: true
        voltage:
          type: number
          nullable: true
        capacity:
          type: number
          nullable: true
    Tire:
      type: object
      title: Tire
      additionalProperties: false
      properties:
        section_width:
          type: integer
          nullable: true
        aspect_ratio:
          type: integer
          nullable: true
        wheel_diameter:
          type: integer
          nullable: true
    Transmission:
      type: object
      title: Transmission
      additionalProperties: false
      properties:
        type:
          type: string
          nullable: true
        gears:
          type: integer
          nullable: true
        ratio_1:
          type: number
          nullable: true
        ratio_2:
          type: number
          nullable: true
        ratio_3:
          type: number
          nullable: true
        ratio_4:
          type: number
          nullable: true
        ratio_5:
          type: number
          nullable: true
        ratio_6:
          type: number
          nullable: true
        ratio_7:
          type: number
          nullable: true
        ratio_8:
          type: number
          nullable: true
        ratio_9:
          type: number
          nullable: true
        ratio_10:
          type: number
          nullable: true
        ratio_rear:
          type: number
          nullable: true
        reduction_ratio_front:
          type: number
          nullable: true
        reduction_ratio_rear:
          type: number
          nullable: true
    UserResponse:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: ほげ 太郎
        email:
          type: string
          format: email
          example: hoge@example.com
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        is_del:
          type: integer
      required:
        - id
        - name
        - email
        - role
        - created_at
        - updated_at
        - is_del
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      title: ''
    Users:
      title: Users
      type: array
      items:
        $ref: '#/components/schemas/UserResponse'
    Id:
      type: object
      title: Id
      additionalProperties: false
      properties:
        id:
          type: integer
      required:
        - id
      description: ''
    TokenResponse:
      title: TokenResponse
      type: object
      properties:
        code:
          type: integer
        expire:
          type: string
          format: date-time
        token:
          type: string
      required:
        - code
        - expire
        - token
    LoginRequest:
      title: LoginRequest
      type: object
      properties:
        email:
          type: string
          format: email
          example: hoge@example.com
        password:
          type: string
          format: password
          example: password
      required:
        - email
        - password
      description: ''
    PostUserRequest:
      title: PostUserRequest
      type: object
      properties:
        name:
          type: string
          example: ほげ 太郎
        email:
          type: string
          format: email
          example: hoge@example.com
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        password:
          type: string
          format: password
          example: password
      required:
        - name
        - email
        - role
        - password
    CodeResponse:
      type: object
      title: CodeResponse
      additionalProperties: false
      properties:
        code:
          type: integer
      required:
        - code
    PatchUserRequest:
      title: PatchUserRequest
      type: object
      properties:
        name:
          type: string
          example: ほげ 太郎
        email:
          type: string
          format: email
          example: hoge@example.com
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        password:
          type: string
          format: password
          example: password
    PatchUserMeRequest:
      type: object
      title: PatchUserMeRequest
      additionalProperties: false
      properties:
        name:
          type: string
          example: ほげ 太郎
        email:
          type: string
          format: email
          example: hoge@example.com
        password:
          type: string
          format: password
          example: password
      x-examples: {}
  responses: {}
  securitySchemes: {}
  requestBodies: {}
