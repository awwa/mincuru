openapi: 3.0.1
info:
  title: Mincuru Cars App
  version: 0.0.1
  contact:
    name: Wataru Sato
    url: 'https://awwa500.blogger.com'
    email: awwa500@gmail.com
  description: Mincuru Cars App API仕様
servers:
  - url: 'http://localhost/api/v1'
  - url: 'http://localhost:8080'
    description: Dev Server
  - url: 'http://localhost:3100'
    description: Stoplight Studio
  - url: 'http://localhost:4010'
    description: Stoplight Prism
  - url: /
    description: Unit test
paths:
  /users/login:
    post:
      description: ログイン
      operationId: post-users-login
      requestBody:
        description: 認証情報
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      summary: ''
      security: []
    parameters: []
  /users/refresh_token:
    parameters: []
    get:
      summary: ''
      operationId: get-users-refresh_token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: トークン更新
  /users/logout:
    post:
      summary: ''
      operationId: post-users-logout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: ログアウト
      parameters: []
  '/users/{id}':
    get:
      description: 指定したIDの'UserResponse'取得
      operationId: get-user
      parameters:
        - name: id
          in: path
          description: 対象AdminのID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      description: ユーザの削除
      operationId: delete-user
      parameters:
        - name: id
          in: path
          description: 対象AdminのID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      description: ユーザの更新
      operationId: patch-user
      parameters:
        - name: id
          in: path
          description: 対象AdminのID
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      requestBody:
        description: 更新するAdmin情報
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserRequest'
        required: false
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /users:
    get:
      summary: ''
      tags: []
      operationId: get-users
      parameters:
        - schema:
            type: string
            format: email
            example: hoge@example.com
          in: query
          name: email
          description: メールアドレス
          allowReserved: true
        - schema:
            type: string
            example: ほげ 太郎
          in: query
          name: name
          description: 名前
          allowReserved: true
        - schema:
            type: string
            enum:
              - user
              - admin
            example: user
          in: query
          name: role
          description: ロール
          allowReserved: true
      description: 条件にマッチしたユーザの一覧取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                x-examples:
                  example-1:
                    - id: 123
                      name: hoge fuga
                      email: hoge@example.com
                      role: user
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security: []
    parameters: []
    post:
      summary: ''
      operationId: post-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: number
                required:
                  - id
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: ユーザの追加
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRequest'
            examples: {}
        description: ''
  /users/me:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      operationId: get-users-me
components:
  schemas:
    UserResponse:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: ほげ 太郎
        email:
          type: string
          format: email
          example: hoge@example.com
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - email
        - role
        - created_at
        - updated_at
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      title: ''
    Users:
      title: Users
      type: array
      items:
        $ref: '#/components/schemas/UserResponse'
    IdResponse:
      type: object
      title: IdResponse
      additionalProperties: false
      properties:
        id:
          type: integer
      required:
        - id
      description: ''
    TokenResponse:
      title: TokenResponse
      type: object
      properties:
        code:
          type: integer
        expire:
          type: string
          format: date-time
        token:
          type: string
      required:
        - code
        - expire
        - token
    LoginRequest:
      title: LoginRequest
      type: object
      properties:
        email:
          type: string
          format: email
          example: hoge@example.com
        password:
          type: string
          format: password
          example: password
      required:
        - email
        - password
      description: ''
    CodeResponse:
      type: object
      title: CodeResponse
      additionalProperties: false
      properties:
        code:
          type: integer
      required:
        - code
    PostUserRequest:
      title: PostUserRequest
      type: object
      properties:
        name:
          type: string
          example: ほげ 太郎
        email:
          type: string
          format: email
          example: hoge@example.com
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        password:
          type: string
          format: password
          example: password
      required:
        - name
        - email
        - role
        - password
    PatchUserRequest:
      title: PatchUserRequest
      type: object
      properties:
        name:
          type: string
          example: ほげ 太郎
        email:
          type: string
          format: email
          example: hoge@example.com
        role:
          type: string
          enum:
            - user
            - admin
          example: user
        password:
          type: string
          format: password
          example: password
  responses: {}
  securitySchemes: {}
  requestBodies: {}
